// Generated by Dagger (https://dagger.dev).
package com.nitv.newsapp.di;

import android.content.Context;
import com.nitv.newsapp.data.local.NewsDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_ProvideDatabaseFactory implements Factory<NewsDatabase> {
  private final Provider<Context> appContextProvider;

  public RepositoryModule_ProvideDatabaseFactory(Provider<Context> appContextProvider) {
    this.appContextProvider = appContextProvider;
  }

  @Override
  public NewsDatabase get() {
    return provideDatabase(appContextProvider.get());
  }

  public static RepositoryModule_ProvideDatabaseFactory create(
      Provider<Context> appContextProvider) {
    return new RepositoryModule_ProvideDatabaseFactory(appContextProvider);
  }

  public static NewsDatabase provideDatabase(Context appContext) {
    return Preconditions.checkNotNullFromProvides(RepositoryModule.INSTANCE.provideDatabase(appContext));
  }
}
